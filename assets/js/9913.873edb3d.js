"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[9913],{39913:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>s,toc:()=>a});var r=n(74848),i=n(28453);const s={},o=void 0,a=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(t.p,{children:["First we'll need to pull in our requisite libraries (",(0,r.jsx)(t.code,{children:"import unittest"})," for our test framework, ",(0,r.jsx)(t.code,{children:"from selenium import webdriver"})," to drive the browser, and ",(0,r.jsx)(t.code,{children:"import time"})," to add a delay in our script so we're able to see the notification messages), declare our test class, and wire up some test ",(0,r.jsx)(t.code,{children:"setUp"})," and ",(0,r.jsx)(t.code,{children:"tearDown"})," methods."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"# filename: growl.py\nimport unittest\nfrom selenium import webdriver\nimport time\n\n\nclass Growl(unittest.TestCase):\n\n    def setUp(self):\n        self.driver = webdriver.Firefox()\n\n    def tearDown(self):\n        self.driver.quit()\n\n# ...\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Now for our test. We'll need to visit the page we want to display notifications on and do some work with JavaScript to load ",(0,r.jsx)(t.a,{href:"http://jquery.com/",children:"jQuery"}),", jQuery Growl, and styles for jQuery Growl. After that we can issue commands to jQuery Growl to make notification messages display on the page."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'# filename: growl.py\n# ...\n    def test_example_1(self):\n        driver = self.driver\n        driver.get(\'http://the-internet.herokuapp.com\')\n\n        # Check for jQuery on the page, add it if needbe\n        driver.execute_script(\n            "if (!window.jQuery) {"\n            "var jquery = document.createElement(\'script\');"\n            "jquery.type = \'text/javascript\';"\n            "jquery.src = \'https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\';"\n            "document.getElementsByTagName(\'head\')[0].appendChild(jquery);}")\n\n        # Use jQuery to add jquery-growl to the page\n        driver.execute_script("$.getScript(\'http://the-internet.herokuapp.com/js/vendor/jquery.growl.js\')")\n\n        # Use jQuery to add jquery-growl styles to the page\n        driver.execute_script(\n            "$(\'head\').append(\'"\n            "<link rel=stylesheet "\n            "href=http://the-internet.herokuapp.com/css/jquery.growl.css "\n            "type=text/css />\');")\n\n        time.sleep(5)\n\n        # jquery-growl w/ no frills\n        driver.execute_script("$.growl({ title: \'GET\', message: \'/\' });")\n\n        time.sleep(5)\n\nif __name__ == "__main__":\n    unittest.main()\n'})}),"\n",(0,r.jsx)(t.p,{children:"And if we wanted to see color-coded notifications, then we could use one of the following:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"        driver.execute_script(\"$.growl.error({ title: 'ERROR', message: 'your error message goes here' });\")\n        driver.execute_script(\"$.growl.notice({ title: 'Notice', message: 'your notice message goes here' });\")\n        driver.execute_script(\"$.growl.warning({ title: 'Warning!', message: 'your warning message goes here' });\")\n"})}),"\n",(0,r.jsx)(t.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,r.jsxs)(t.p,{children:["When we save this file and run it (e.g., ",(0,r.jsx)(t.code,{children:"python growl.py"}),") here is what will happen:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Browser opens"}),"\n",(0,r.jsx)(t.li,{children:"Load the page"}),"\n",(0,r.jsx)(t.li,{children:"Add jQuery, jQuery Growl, and jQuery Growl notifications to the page"}),"\n",(0,r.jsx)(t.li,{children:"Display a set of notification messages in the top-right corner of the page"}),"\n",(0,r.jsx)(t.li,{children:"Notification messages disappear"}),"\n",(0,r.jsx)(t.li,{children:"Browser closes"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(t.p,{children:"In order to use this approach, you will need to load jQuery Growl on every page you want to display output to -- which can be a bit of overhead. But if you want rich messaging like this then that's the price you have to pay (unless you can get your team to add it to the application under test)."}),"\n",(0,r.jsxs)(t.p,{children:["I'd like to give a big thanks to Jon Austen (",(0,r.jsx)(t.a,{href:"https://twitter.com/austenjt",children:"Twitter"}),", ",(0,r.jsx)(t.a,{href:"https://github.com/djangofan",children:"GitHub"}),") for giving me the idea to use jQuery Growl with Selenium."]}),"\n",(0,r.jsx)(t.p,{children:"Happy Testing!"})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);