"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[7719],{87719:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>s,default:()=>c,frontMatter:()=>i,toc:()=>a});var n=r(74848),o=r(28453);const i={},s=void 0,a=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsxs)(t.p,{children:["First let's import our requisite classes (for annotations (e.g., ",(0,n.jsx)(t.code,{children:"org.junit.After"}),", etc.), driving the browser with Selenium (e.g., ",(0,n.jsx)(t.code,{children:"org.openqa.selenium.WebDriver"}),", etc.), and matchers for our assertions (e.g., ",(0,n.jsx)(t.code,{children:"org.hamcrest.CoreMatchers"}),", etc.)) and start our class with some setup and teardown methods."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"// filename: Growl.java\nimport org.junit.After;\nimport org.junit.Before;\nimport org.junit.Test;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.JavascriptExecutor;\nimport org.openqa.selenium.firefox.FirefoxDriver;\n\npublic class Growl {\n    WebDriver driver;\n    JavascriptExecutor js;\n\n    @Before\n    public void setUp() throws Exception {\n        driver = new FirefoxDriver();\n        js = (JavascriptExecutor) driver;\n    }\n\n    @After\n    public void tearDown() throws Exception {\n        driver.quit();\n    }\n// ...\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Next we'll need to visit the page we want to display notifications on and do some work with JavaScript to load ",(0,n.jsx)(t.a,{href:"http://jquery.com/",children:"jQuery"}),", jQuery Growl, and styles for jQuery Growl. After that, we can issue commands to jQuery Growl to make notification messages display on the page."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:'// filename: Growl.java\n// ...\n    @Test\n    public void growlTest() throws InterruptedException {\n        driver.get("http://the-internet.herokuapp.com/");\n\n        // Check for jQuery on the page, add it if need be\n        js.executeScript("if (!window.jQuery) {" +\n                "var jquery = document.createElement(\'script\'); jquery.type = \'text/javascript\';" +\n                "jquery.src = \'https://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js\';" +\n                "document.getElementsByTagName(\'head\')[0].appendChild(jquery);" +\n                "}");\n\n        // Use jQuery to add jquery-growl to the page\n        js.executeScript("$.getScript(\'http://the-internet.herokuapp.com/js/vendor/jquery.growl.js\')");\n\n        // Use jQuery to add jquery-growl styles to the page\n        js.executeScript("$(\'head\').append(\'<link rel=\\"stylesheet\\" href=\\"http://the-internet.herokuapp.com/css/jquery.growl.css\\" type=\\"text/css\\" />\');");\n\n        Thread.sleep(5000); // Adding 2 seconds of extra time\n\n        // jquery-growl w/ no frills\n        js.executeScript("$.growl({ title: \'GET\', message: \'/\' });");\n\n        Thread.sleep(5000); // Adding 2 seconds of extra time to see \'GET\' message\n// ...\n'})}),"\n",(0,n.jsx)(t.p,{children:"And if we wanted to see color-coded notifications, then we could use one of the following:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-java",children:"// filename: Growl.java\n// ...\n        // jquery-growl w/ colorized output\n        js.executeScript(\"$.growl.error({ title: 'ERROR', message: 'your error message goes here' });\");\n        js.executeScript(\"$.growl.notice({ title: 'Notice', message: 'your notice message goes here' });\");\n        js.executeScript(\"$.growl.warning({ title: 'Warning!', message: 'your warning message goes here' });\");\n        Thread.sleep(5000);\n    }\n\n}\n"})}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"Thread.Sleep(5000);"})," is there for demonstration purposes. It will keep the Growl notifications on the page for 5 seconds so they're easier to see. However, if your test fails due to ",(0,n.jsx)(t.code,{children:"growl"}),", you can also use ",(0,n.jsx)(t.code,{children:"Thread.Sleep(5000);"})," to add some more time to your test."]}),"\n",(0,n.jsx)(t.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,n.jsxs)(t.p,{children:["When you save this file and run it (e.g., ",(0,n.jsx)(t.code,{children:"mvn clean test"})," from the command-line) here is what will happen:"]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Browser opens"}),"\n",(0,n.jsx)(t.li,{children:"Visit the page"}),"\n",(0,n.jsx)(t.li,{children:"Make sure jQuery is on the page, add it if it's not"}),"\n",(0,n.jsx)(t.li,{children:"Add jQuery Growl to the page"}),"\n",(0,n.jsx)(t.li,{children:"Display a set of notification messages in the top-right corner of the page with jQuery Growl"}),"\n",(0,n.jsx)(t.li,{children:"Notification messages disappear after 5 seconds"}),"\n",(0,n.jsx)(t.li,{children:"Browser closes"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(t.p,{children:"In order to use this approach, you will need to load jQuery Growl on every page you want to display output to -- which can be a bit of overhead. But if you want rich messaging like this, then that's the price you have to pay (unless you can get your team to add it to the application under test)."}),"\n",(0,n.jsxs)(t.p,{children:["I'd like to give a big thanks to Jon Austen (",(0,n.jsx)(t.a,{href:"https://twitter.com/austenjt",children:"Twitter"}),", ",(0,n.jsx)(t.a,{href:"https://github.com/djangofan",children:"GitHub"}),", ",(0,n.jsx)(t.a,{href:"http://jonausten.info/",children:"Blog"}),") for giving me the idea to use jQuery Growl with Selenium and ",(0,n.jsx)(t.a,{href:"https://github.com/RomanIsko",children:"Roman Isko"})," for contributing the code to port this tip to Java. Want me to cover more tips in Java or other programming languages? Send me a pull request for an existing tip and I will! All code examples are open source and available ",(0,n.jsx)(t.a,{href:"http://github.com/tourdedave/elemental-selenium-tips",children:"here"}),"."]}),"\n",(0,n.jsx)(t.p,{children:"Happy Testing!"})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);