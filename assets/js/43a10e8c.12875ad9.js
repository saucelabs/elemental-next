"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[1668],{65104:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=t(74848),a=t(28453);const r={title:"How to Upgrade from Selenium RC to WebDriver",id:"28-upgrading-from-rc",slug:"/28-upgrading-from-rc",sidebar_label:"Upgrade from Selenium RC to WebDriver",description:"As the Selenium project continues to evolve, Selenium RC is moving closer to end-of-life. This is especially true with the upcoming release of Selenium 3 where minimal support will be offered for RC",hide_table_of_contents:!0,number:28,publish_date:new Date("2015-10-13T00:00:00.000Z"),tags:["selenium rc","upgrading"],level:2,category:["fundamentals"]},o="How to Upgrade from Selenium RC to WebDriver",s={id:"upgrading-from-rc/28-upgrading-from-rc",title:"How to Upgrade from Selenium RC to WebDriver",description:"As the Selenium project continues to evolve, Selenium RC is moving closer to end-of-life. This is especially true with the upcoming release of Selenium 3 where minimal support will be offered for RC",source:"@site/tips/28-upgrading-from-rc/main.mdx",sourceDirName:"28-upgrading-from-rc",slug:"/28-upgrading-from-rc",permalink:"/tips/28-upgrading-from-rc",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/elemental-next/blob/main/frontend/tips/28-upgrading-from-rc/main.mdx",tags:[{label:"selenium rc",permalink:"/tips/tags/selenium-rc"},{label:"upgrading",permalink:"/tips/tags/upgrading"}],version:"current",lastUpdatedBy:"Diego Molina",lastUpdatedAt:1711231050,formattedLastUpdatedAt:"Mar 23, 2024",frontMatter:{title:"How to Upgrade from Selenium RC to WebDriver",id:"28-upgrading-from-rc",slug:"/28-upgrading-from-rc",sidebar_label:"Upgrade from Selenium RC to WebDriver",description:"As the Selenium project continues to evolve, Selenium RC is moving closer to end-of-life. This is especially true with the upcoming release of Selenium 3 where minimal support will be offered for RC",hide_table_of_contents:!0,number:28,publish_date:"2015-10-13T00:00:00.000Z",tags:["selenium rc","upgrading"],level:2,category:["fundamentals"]},sidebar:"defaultSidebar",previous:{title:"Parallelization",permalink:"/tips/27-parallel"},next:{title:"ChromeDriver",permalink:"/tips/29-chrome-driver"}},l={},d=[{value:"Intro",id:"intro",level:2},{value:"A Solution",id:"a-solution",level:2},{value:"4 Simple Steps",id:"4-simple-steps",level:2},{value:"1. Clean Up Your Tests",id:"1-clean-up-your-tests",level:3},{value:"2. Swap in WebDriver-backed Selenium",id:"2-swap-in-webdriver-backed-selenium",level:3},{value:"3. &amp; 4. Improve Things Incrementally",id:"3--4-improve-things-incrementally",level:3},{value:"Common Pitfalls",id:"common-pitfalls",level:2},{value:"Alert Handling",id:"alert-handling",level:3},{value:"Waiting For The Page To Load",id:"waiting-for-the-page-to-load",level:3},{value:"Getting Text From The Page",id:"getting-text-from-the-page",level:3},{value:"Be careful with JavaScript",id:"be-careful-with-javascript",level:3},{value:"Inertia",id:"inertia",level:3},{value:"Summary",id:"summary",level:2},{value:"About The Author",id:"about-the-author",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"how-to-upgrade-from-selenium-rc-to-webdriver",children:"How to Upgrade from Selenium RC to WebDriver"}),"\n",(0,i.jsx)(n.h2,{id:"intro",children:"Intro"}),"\n",(0,i.jsxs)(n.p,{children:["As the Selenium project continues to evolve, Selenium RC is moving closer to end-of-life. This is especially\ntrue with the upcoming release of Selenium 3 where minimal support will be offered for RC (details of which you\ncan learn more about from ",(0,i.jsx)(n.a,{href:"https://www.selenium.dev/blog/2013/selenium-hangout-2-recap/",children:"a Selenium Hangout with Simon Stewart"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"But how do you approach an upgrade like this? Especially if you have an enormous amount of Selenium RC tests that\nyou rely on?"}),"\n",(0,i.jsx)(n.h2,{id:"a-solution",children:"A Solution"}),"\n",(0,i.jsx)(n.p,{children:"Take Jason Leyba's advice. He works at Google and oversaw the transition of their tests from Selenium RC to WebDriver.\nAnd he posits that it can be done by following 4 simple steps:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Clean up your tests"}),"\n",(0,i.jsx)(n.li,{children:"Swap in WebDriver-backed Selenium"}),"\n",(0,i.jsx)(n.li,{children:"Use WebDriver for all new features"}),"\n",(0,i.jsx)(n.li,{children:"Replace RC usage as tests break"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["To give you some context, Google's Selenium tests spawn something on the order of ",(0,i.jsx)(n.em,{children:"3 million unique browser sessions\nper day"}),". And they were able to make this transition happen with minimal disruption. If they were able to make this\nhappen at such a scale, then hopefully this serves as inspiration for you to do the same at your organization."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["NOTE: Jason discussed this in detail in ",(0,i.jsx)(n.a,{href:"http://www.youtube.com/watch?v=cSLmfegT36A",children:"his keynote talk at Selenium Conf 2013 in Boston"}),". His talking\npoints and code examples are recapped below. You can watch his full talk ",(0,i.jsx)(n.a,{href:"http://www.youtube.com/watch?v=cSLmfegT36A",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"4-simple-steps",children:"4 Simple Steps"}),"\n",(0,i.jsx)(n.h3,{id:"1-clean-up-your-tests",children:"1. Clean Up Your Tests"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:'"Turns out that tests that are easy to maintain are tests that are easy to migrate." -- Jason Leyba'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The best thing you can do to keep your tests clean is to practice good abstractions. In the simplest form this\nmeans not referencing Selenium commands directly in your tests -- pulling these out into something akin to page\nobjects instead."}),"\n",(0,i.jsxs)(n.p,{children:["__NOTE: You can read more about how to accomplish this in ",(0,i.jsx)(n.a,{href:"https://elementalselenium.com/docs/use-a-base-page-object/9-use-a-base-page-object",children:"tip 9"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"2-swap-in-webdriver-backed-selenium",children:"2. Swap in WebDriver-backed Selenium"}),"\n",(0,i.jsx)(n.p,{children:"With WebDriver-backed Selenium you get two driver instances to use in your tests -- one for Selenium RC and another\nfor WebDriver. This enables you to keep your Selenium RC tests running while simultaneously building out WebDriver\nfunctionality as you transition things over."}),"\n",(0,i.jsxs)(n.p,{children:["You can see an example of what this looks like ",(0,i.jsx)(n.a,{href:"https://github.com/SeleniumHQ/selenium/wiki/Ruby-Bindings#webdriver-backed-selenium",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"3--4-improve-things-incrementally",children:"3. & 4. Improve Things Incrementally"}),"\n",(0,i.jsx)(n.p,{children:"For every new feature you write tests for, use WebDriver. And as your Selenium RC tests break go back and\nreplace the broken bits with WebDriver."}),"\n",(0,i.jsx)(n.p,{children:"Chip away at this over time and you'll eventually be upgraded."}),"\n",(0,i.jsx)(n.h2,{id:"common-pitfalls",children:"Common Pitfalls"}),"\n",(0,i.jsx)(n.p,{children:"There are a handful of pitfalls to be aware of when stepping through this upgrade."}),"\n",(0,i.jsx)(n.h3,{id:"alert-handling",children:"Alert Handling"}),"\n",(0,i.jsx)(n.p,{children:"WebDriver handles JavaScript alerts in a fundamentally different and incompatible way between Selenium RC and WebDriver\nthat won't work in WebDriver-backed Selenium."}),"\n",(0,i.jsx)(n.p,{children:"The best way to address this is to port your alert handling from Selenium RC to WebDriver -- which is pretty\nstraightforward and should be easy to accomplish assuming you have things well abstracted (re: Step #1 above)."}),"\n",(0,i.jsxs)(n.p,{children:["Here is an example of the difference, in ",(0,i.jsx)(n.code,{children:"Java"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Selenium RC\nselenium.chooseCancelOnNextConfirmation();\nselenium.click("id=foo");\n\n// WebDriver\nwebdriver.findElement(By.id("foo")).click();\nwebdriver.switchTo().alert().dismiss();\n'})}),"\n",(0,i.jsx)(n.h3,{id:"waiting-for-the-page-to-load",children:"Waiting For The Page To Load"}),"\n",(0,i.jsx)(n.p,{children:"There's no need to explicitly wait for the page to load anymore since WebDriver can implicitly do this for us."}),"\n",(0,i.jsxs)(n.p,{children:["Here's an example, in ",(0,i.jsx)(n.code,{children:"Java"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Selenium RC\nselenium.open("http://www.google.com");\nselenium.waitForPageToLoad();\nselenium.typeKeys("name=q", "bears");\n\n// WebDriver\nselenium.open("http://www.google.com");\nselenium.typeKeys("name=q", "bears");\n'})}),"\n",(0,i.jsx)(n.p,{children:"If you run into timing issues with this newer approach, consider adding an explicit wait for the element you want\nto interact with."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["NOTE: For more insight into implicit and explicit waits, check out ",(0,i.jsx)(n.a,{href:"https://elementalselenium.com/docs/waiting/47-waiting",children:"tip 47"}),"."]})}),"\n",(0,i.jsx)(n.h3,{id:"getting-text-from-the-page",children:"Getting Text From The Page"}),"\n",(0,i.jsxs)(n.p,{children:["It's an expensive operation (and overkill) to get ",(0,i.jsx)(n.strong,{children:"ALL"})," of the text from the page to make a verification. And\nit takes longer to execute this in WebDriver."]}),"\n",(0,i.jsxs)(n.p,{children:["A better approach is to find the element that has the text you want and check it's text instead. Alternatively,\nif you want to search the entire page, it's better to get the page's ",(0,i.jsx)(n.em,{children:"source"})," and parse that."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// Example in Java\n\n// Slow and unnecessary\nString text = selenium.getBodyText();\nassertTrue(text.contains("hello"));\n\n// Targeted and fast\nWebElement body = webdriver.findElement(By.tagName("body"));\nString text = body.getText();\nassertTrue(text.contains("hello"));\n'})}),"\n",(0,i.jsx)(n.h3,{id:"be-careful-with-javascript",children:"Be careful with JavaScript"}),"\n",(0,i.jsx)(n.p,{children:"WebDriver-backed Selenium is not built for performance. It's meant to be a transitional tool. So things will run\nslower in it. The worst offender being when you issue JavaScript commands directly to the Selenium Core API. So do\nyour best to avoid things like this."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// Example in java\n\nselenium.getEval(\n     \"selenium.isElementPresent('id=foo') && \" +\n     \"selenium.isVisible('id=foo')\");\n"})}),"\n",(0,i.jsx)(n.h3,{id:"inertia",children:"Inertia"}),"\n",(0,i.jsx)(n.p,{children:"It's worth noting that the hardest part of Google's transition wasn't technical. Teams were really slow to\nadopt WebDriver -- even when the tools were readily available, well documented, and easy to use. Jason and\nhis team were able to persevere and succeed through various means (e.g carrot, stick, elbow grease, etc.), but\nthis really slowed their progress."}),"\n",(0,i.jsxs)(n.p,{children:["If you find yourself in a similar situation at your organization, it's worth giving\n",(0,i.jsx)(n.a,{href:"http://www.youtube.com/watch?v=cSLmfegT36A",children:"Jason's talk"})," a watch for inspiration."]}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(n.p,{children:"If you're faced with a similar upgrade in your future hopefully this tip has helped prepare you for what lies ahead."}),"\n",(0,i.jsx)(n.p,{children:"Happy Testing!"}),"\n",(0,i.jsx)(n.h2,{id:"about-the-author",children:"About The Author"}),"\n",(0,i.jsx)(n.p,{children:"Dave Haeffner is the original writer of Elemental Selenium -- a free, once weekly Selenium tip newsletter that's\nread by thousands of testing professionals. He also created and maintains the-internet (an open-source web app\nthat's perfect for writing automated tests against)."}),"\n",(0,i.jsx)(n.p,{children:"Dave has helped numerous companies successfully implement automated acceptance testing; including The Motley Fool,\nManTech International, Sittercity, and Animoto. He is also an active member of the Selenium project and has\nspoken at numerous conferences and meetups around the world about automated acceptance testing."})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);