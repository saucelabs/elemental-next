"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[6724],{86724:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>o,frontMatter:()=>l,toc:()=>a});var i=t(74848),r=t(28453);const l={},s=void 0,a=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2},{value:"About The Author",id:"about-the-author",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.p,{children:"For our initial setup let's pull in our requisite libraries, declare our test class, and wire up some setup and teardown methods."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// filename: test/highlight-elements.spec.js\nconst assert = require("assert");\nconst { Builder, By, Key } = require("selenium-webdriver");\n\ndescribe("Highlight elements", function() {\n  let driver;\n\n  beforeEach(async function() {\n    this.timeout(60000)\n    driver = await new Builder().forBrowser("firefox").build();\n  });\n\n  afterEach(async function() {\n    await driver.quit();\n  });\n// ...\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Now let's create a ",(0,i.jsx)(n.code,{children:"highlight"})," helper function that will accept a found ",(0,i.jsx)(n.code,{children:"element"})," from Selenium and a time to wait (e.g., ",(0,i.jsx)(n.code,{children:"duration"}),") as arguments."]}),"\n",(0,i.jsx)(n.p,{children:"By setting a duration, we can control how long to highlight an element on the page before reverting the styling back. We can also make this an optional argument by setting a default value for it (e.g., 3 seconds)."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// filename: test/highlight-elements.spec.js\n// ...\n  async function highlight(element, duration = 2000) {\n    // store original style so it can be reset later\n    const originalStyle = await element.getAttribute("style");\n\n    // style element with callout (e.g., dashed red border)\n    await driver.executeScript(\n      "arguments[0].setAttribute(arguments[1], arguments[2])",\n      element,\n      "style",\n      "border: 2px solid red; border-style: dashed;"\n    );\n\n    // keep element highlighted for the duration and then revert\n    await driver.sleep(duration);\n    await driver.executeScript(\n      "arguments[0].setAttribute(arguments[1], arguments[2])",\n      element,\n      "style",\n      originalStyle\n    );\n  }\n// ...\n'})}),"\n",(0,i.jsx)(n.p,{children:"There are three things going on here."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"We store the style of the element so we can revert it back when we're done"}),"\n",(0,i.jsx)(n.li,{children:"We change the style of the element so it visually stands out (e.g., a red dashed border)"}),"\n",(0,i.jsx)(n.li,{children:"We revert the style of the element back after 3 seconds"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["We're accomplishing the style change through JavaScript's ",(0,i.jsx)(n.code,{children:"setAttribute"})," function. And we're executing it with Selenium's ",(0,i.jsx)(n.code,{children:"executeScript"})," command."]}),"\n",(0,i.jsxs)(n.p,{children:["Now to use this in our test is simple, we just prepend a ",(0,i.jsx)(n.code,{children:"findElement"})," command with a call to the ",(0,i.jsx)(n.code,{children:"highlight"})," method."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'// filename: test/highlight-elements.spec.js\n// ...\n  it("highlights target element", async function() {\n    await driver.get("http://the-internet.herokuapp.com/large");\n    await highlight(await driver.findElement(By.id("sibling-2.3")));\n  });\n});\n'})}),"\n",(0,i.jsx)(n.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,i.jsxs)(n.p,{children:["When we save this file and run it (e.g., ",(0,i.jsx)(n.code,{children:"mocha"})," from the command-line) here is what will happen."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Browser opens"}),"\n",(0,i.jsx)(n.li,{children:"Load the page"}),"\n",(0,i.jsx)(n.li,{children:"Find the element"}),"\n",(0,i.jsx)(n.li,{children:"Change the styling of the element so it has a red dashed-line border"}),"\n",(0,i.jsx)(n.li,{children:"Wait 3 seconds"}),"\n",(0,i.jsx)(n.li,{children:"Revert the styling to remove the border"}),"\n",(0,i.jsx)(n.li,{children:"Browser closes"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(n.p,{children:"If you wanted to take this a step further, you could leverage this approach along with an interactive debugger."}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, you could verify your locators by using a browser plugin like FireFinder."}),"\n",(0,i.jsx)(n.p,{children:"Happy Testing!"}),"\n",(0,i.jsx)(n.h2,{id:"about-the-author",children:"About The Author"}),"\n",(0,i.jsxs)(n.p,{children:["You can follow Brian on Twitter at ",(0,i.jsx)(n.a,{href:"https://twitter.com/bbbco",children:"@bbbco"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Brian D. Goad profile picture",src:t(25764).A+"#author-img",title:"a title",width:"400",height:"400"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},25764:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/brian-goad-06cd835a357f61c84c3c62c72fb7d03b.jpeg"}}]);