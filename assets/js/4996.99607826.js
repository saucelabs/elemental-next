"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[4996],{54996:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>d,frontMatter:()=>l,toc:()=>a});var r=t(74848),i=t(28453);const l={},s=void 0,a=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["Let's start by pulling in the necessary libraries (",(0,r.jsx)(n.code,{children:"selenium-webdriver"})," to control the browser and ",(0,r.jsx)(n.code,{children:"rspec/expectations"})," & ",(0,r.jsx)(n.code,{children:"RSpec::Matchers"})," to perform an assertion) and wiring up some simple ",(0,r.jsx)(n.code,{children:"setup"}),", ",(0,r.jsx)(n.code,{children:"teardown"}),", and ",(0,r.jsx)(n.code,{children:"run"})," methods."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# filename: right_click.rb\n\nrequire 'selenium-webdriver'\nrequire 'rspec/expectations'\ninclude RSpec::Matchers\n\ndef setup\n  @driver = Selenium::WebDriver.for :firefox\nend\n\ndef teardown\n  @driver.quit\nend\n\ndef run\n  setup\n  yield\n  teardown\nend\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now we're ready to write our test."}),"\n",(0,r.jsxs)(n.p,{children:["Let's use an example from ",(0,r.jsx)(n.a,{href:"https://github.com/saucelabs/the-internet",children:"the-internet"})," that will render a custom context menu when we right-click on a specific area of the page (",(0,r.jsx)(n.a,{href:"http://the-internet.herokuapp.com/context_menu",children:"link"}),"). Clicking the context menu will trigger a JavaScript alert which will say ",(0,r.jsx)(n.code,{children:"You selected a context menu"}),". We'll grab this text and use it to assert that the menu was actually triggered."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"run do\n  @driver.get 'http://the-internet.herokuapp.com/context_menu'\n  menu_area = @driver.find_element id: 'hot-spot'\n  @driver.action.context_click(menu_area).send_keys(\n    :arrow_down).send_keys(\n    :arrow_down).send_keys(\n    :arrow_down).send_keys(\n    :enter).perform\n  alert = @driver.switch_to.alert\n  expect(alert.text).to eq('You selected a context menu')\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,r.jsxs)(n.p,{children:["If we save this file and run it (e.g., ",(0,r.jsx)(n.code,{children:"ruby right_click.rb"}),") from the command-line) here is what will happen:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Open the browser and visit the page"}),"\n",(0,r.jsx)(n.li,{children:"Find and right-click the area which will render a custom context menu"}),"\n",(0,r.jsx)(n.li,{children:"Select the context menu option with keyboard keys"}),"\n",(0,r.jsx)(n.li,{children:"JavaScript alert appears"}),"\n",(0,r.jsx)(n.li,{children:"Grab the text of the JavaScript alert"}),"\n",(0,r.jsx)(n.li,{children:"Assert that the text from the alert is what we expect"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(n.p,{children:["To learn more about context menus, you can read ",(0,r.jsx)(n.a,{href:"http://blog.teamtreehouse.com/building-html5-context-menus",children:"this write-up from the Tree House blog"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Happy Testing!"})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);