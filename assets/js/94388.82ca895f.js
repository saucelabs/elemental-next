"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[94388],{72007:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var n=r(74848),i=r(28453);const s={},o=void 0,a={id:"growl/_ruby",title:"_ruby",description:"Example",source:"@site/tips/53-growl/_ruby.mdx",sourceDirName:"53-growl",slug:"/growl/_ruby",permalink:"/tips/growl/_ruby",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/elemental-next/blob/main/frontend/tips/53-growl/_ruby.mdx",tags:[],version:"current",lastUpdatedBy:"renovate[bot]",lastUpdatedAt:1731430454e3,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"_python",permalink:"/tips/growl/_python"},next:{title:"Growl",permalink:"/tips/53-growl"}},l={},d=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsxs)(t.p,{children:["First, we'll include our requisite libraries and wire up some simple ",(0,n.jsx)(t.code,{children:"setup"}),", ",(0,n.jsx)(t.code,{children:"teardown"}),", and ",(0,n.jsx)(t.code,{children:"run"})," methods."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"# filename: growl.rb\n\nrequire 'selenium-webdriver'\nrequire 'rspec/expectations'\ninclude RSpec::Matchers\n\ndef setup\n  @driver = Selenium::WebDriver.for :firefox\nend\n\ndef teardown\n  @driver.quit\nend\n\ndef run\n  setup\n  yield\n  teardown\nend\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Now for our test. We'll need to visit the page we want to display notifications on and do some work with JavaScript to load ",(0,n.jsx)(t.a,{href:"http://jquery.com/",children:"jQuery"}),", jQuery Growl, and styles for jQuery Growl. After that we can issue commands to jQuery Growl to make notification messages display on the page."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"run do\n  @driver.get 'http://the-internet.herokuapp.com'\n\n  # Step 1: check for jQuery on the page, add it if needbe\n  @driver.execute_script(\n    \"if (!window.jQuery) {\n    var jquery = document.createElement('script');\n    jquery.type = 'text/javascript';\n    jquery.src = 'https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js';\n    document.getElementsByTagName('head')[0].appendChild(jquery);\n    }\")\n\n  # Step 2: use jQuery to add jquery-growl to the page\n  @driver.execute_script(\"$.getScript('http://the-internet.herokuapp.com/js/vendor/jquery.growl.js')\")\n\n  # Step 3: use jQuery to add jquery-growl styles to the page\n  @driver.execute_script(\"$('head').append('<link rel=\\\"stylesheet\\\" href=\\\"http://the-internet.herokuapp.com/css/jquery.growl.css\\\" type=\\\"text/css\\\" />');\")\n\n  sleep 5 # adding 5 seconds sleep\n\n  # Step 4: display a message with jquery-growl\n  @driver.execute_script(\"$.growl({ title: 'GET', message: '/' });\")\n\n  sleep 5 # to keep the browser active long enough to see the notifications\nend\n"})}),"\n",(0,n.jsx)(t.p,{children:"And if we wanted to see color-coded notifications, then we could use one of the following:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ruby",children:"  @driver.execute_script(\"$.growl.error({ title: 'ERROR', message: 'your error message goes here' });\")\n  @driver.execute_script(\"$.growl.notice({ title: 'Notice', message: 'your notice message goes here' });\")\n  @driver.execute_script(\"$.growl.warning({ title: 'Warning!', message: 'your warning message goes here' });\")\n"})}),"\n",(0,n.jsx)(t.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Browser opens"}),"\n",(0,n.jsx)(t.li,{children:"Load the page"}),"\n",(0,n.jsx)(t.li,{children:"Add jQuery, jQuery Growl, and jQuery Growl notifications to the page"}),"\n",(0,n.jsx)(t.li,{children:"Display a set of notification messages in the top-right corner of the page"}),"\n",(0,n.jsx)(t.li,{children:"Notification messages disappear"}),"\n",(0,n.jsx)(t.li,{children:"Browser closes"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,n.jsx)(t.p,{children:"In order to use this approach, you will need to load jQuery Growl on every page you want to display output to -- which can be a bit of overhead. But if you want rich messaging like this then that's the price you have to pay (unless you can get your team to add it to the application under test)."}),"\n",(0,n.jsx)(t.p,{children:"In a future tip I'll step through how to access Selenium logging output, so we can wire it up to these notifications."}),"\n",(0,n.jsxs)(t.p,{children:["I'd like to give a big thanks to Jon Austen (",(0,n.jsx)(t.a,{href:"https://twitter.com/austenjt",children:"Twitter"}),", ",(0,n.jsx)(t.a,{href:"https://github.com/djangofan",children:"GitHub"}),") for giving me the idea to use jQuery Growl with Selenium."]}),"\n",(0,n.jsx)(t.p,{children:"Happy Testing!"})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);