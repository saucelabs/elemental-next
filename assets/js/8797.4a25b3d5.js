"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[8797],{28797:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>o,default:()=>d,frontMatter:()=>s,toc:()=>a});var i=n(74848),r=n(28453);const s={},o=void 0,a=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(t.p,{children:["Our example page is from ",(0,i.jsx)(t.a,{href:"http://github.com/saucelabs/the-internet",children:"the-internet"})," and can be seen ",(0,i.jsx)(t.a,{href:"http://the-internet.herokuapp.com/abtest",children:"here"}),". There are three different versions of the page that are available. On each page the heading text will vary:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Control: ",(0,i.jsx)(t.code,{children:"A/B Test Control"})]}),"\n",(0,i.jsxs)(t.li,{children:["Variation 1: ",(0,i.jsx)(t.code,{children:"A/B Test Variation 1"})]}),"\n",(0,i.jsxs)(t.li,{children:["Opt-out: ",(0,i.jsx)(t.code,{children:"No A/B Test"})]}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Let's start things off by loading our requisite libraries (",(0,i.jsx)(t.code,{children:"import unittest"})," for our test framework and ",(0,i.jsx)(t.code,{children:"from selenium import webdriver"})," to drive the browser), declare our test class, and wire up some test ",(0,i.jsx)(t.code,{children:"setUp"})," and ",(0,i.jsx)(t.code,{children:"tearDown"})," methods."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# filename: ab_test_opt_out.py\nimport unittest\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\n\n\nclass ABTestOptOut(unittest.TestCase):\n\n    def setUp(self):\n        self.driver = webdriver.Firefox()\n\n    def tearDown(self):\n        self.driver.quit()\n# ...\n"})}),"\n",(0,i.jsx)(t.p,{children:"Now let's begin our first test to step through loading the split testing page and verifying that the text changes after we forge an opt-out cookie."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# filename: ab_test_opt_out.py\n# ...\n    def test_forge_cookie_on_target_page(self):\n        driver = self.driver\n        driver.get('http://the-internet.herokuapp.com/abtest')\n        heading_text = driver.find_element(By.TAG_NAME,'h3').text\n        assert heading_text in ['A/B Test Variation 1', 'A/B Test Control']\n        driver.add_cookie({'name' : 'optimizelyOptOut', 'value' : 'true'})\n        driver.refresh()\n        heading_text = driver.find_element(By.TAG_NAME,'h3').text\n        assert heading_text == 'No A/B Test'\n\n# ...\n"})}),"\n",(0,i.jsx)(t.p,{children:"After navigating to the page we confirm that we are in one of the A/B test groups by grabbing the heading text and checking to see if it matches what we expect. After that we add the opt-out cookie, refresh the page, and then confirm that we are no longer in the A/B test group by checking the heading text again."}),"\n",(0,i.jsx)(t.p,{children:"We could also load the opt-out cookie before navigating to this page."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# filename: ab_test_opt_out.py\n# ...\n    def test_forge_cookie_on_homepage_then_navigate_to_target_page(self):\n        driver = self.driver\n        driver.get('http://the-internet.herokuapp.com')\n        driver.add_cookie({'name' : 'optimizelyOptOut', 'value' : 'true'})\n        driver.get('http://the-internet.herokuapp.com/abtest')\n        heading_text = driver.find_element(By.TAG_NAME,'h3').text\n        assert heading_text == 'No A/B Test'\n\n# ...\n"})}),"\n",(0,i.jsx)(t.p,{children:"Here we are navigating to the main page of the site first and then adding the opt-out cookie. After that we navigate to the split test page and then perform our check. Alternatively, we could opt out without forging a cookie. Instead we just need to append an opt out parameter to the URL."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"# filename: ab_test_opt_out.py\n    def test_url_parameter(self):\n            driver = self.driver\n            driver.get('http://the-internet.herokuapp.com/abtest?optimizely_opt_out=true')\n            driver.switch_to.alert.dismiss()\n            heading_text = driver.find_element(By.TAG_NAME,'h3').text\n            assert heading_text == 'No A/B Test'\n\nif __name__ == \"__main__\":\n    unittest.main()\n"})}),"\n",(0,i.jsxs)(t.p,{children:["By appending ",(0,i.jsx)(t.code,{children:"?optimizely_opt_out=true"})," we achieve the same outcome as before. Keep in mind that this approach triggers a JavaScript alert, so we have to switch to and dismiss it (e.g., ",(0,i.jsx)(t.code,{children:"driver.switch_to.alert.dismiss()"}),") before performing our check."]}),"\n",(0,i.jsx)(t.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,i.jsxs)(t.p,{children:["When we save this file and run it (e.g., ",(0,i.jsx)(t.code,{children:"python ab_test_opt_out.py"})," from the command-line) here is what will happen with either of the tests:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Open the browser"}),"\n",(0,i.jsx)(t.li,{children:"Opt-out of the split tests (either by cookie or appended URL)"}),"\n",(0,i.jsx)(t.li,{children:"Visit the split testing page"}),"\n",(0,i.jsx)(t.li,{children:"Grab the header text"}),"\n",(0,i.jsx)(t.li,{children:"Confirm that the session is opted out of the split test"}),"\n",(0,i.jsx)(t.li,{children:"Close the browser"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(t.p,{children:"Hopefully this tip was helpful in guiding you in different methods of how to opt out of split tests."}),"\n",(0,i.jsx)(t.p,{children:"Happy Testing!"})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);