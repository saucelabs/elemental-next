"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[28772,49557],{49557:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var t=r(74848),i=r(28453);const o={},a=void 0,s={id:"how-to-work-with-hovers/_ruby",title:"_ruby",description:"Example",source:"@site/tips/50-how-to-work-with-hovers/_ruby.mdx",sourceDirName:"50-how-to-work-with-hovers",slug:"/how-to-work-with-hovers/_ruby",permalink:"/tips/how-to-work-with-hovers/_ruby",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/elemental-next/blob/main/frontend/tips/50-how-to-work-with-hovers/_ruby.mdx",tags:[],version:"current",lastUpdatedBy:"renovate[bot]",lastUpdatedAt:1728478865e3,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"_python",permalink:"/tips/how-to-work-with-hovers/_python"},next:{title:"How To Work With Hovers",permalink:"/tips/50-hovers"}},l={},d=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsxs)(n.p,{children:["Our example application is available ",(0,t.jsx)(n.a,{href:"http://the-internet.herokuapp.com/hovers",children:"here"})," on ",(0,t.jsx)(n.a,{href:"http://github.com/saucelabs/the-internet",children:"the-internet"}),". It has a few avatars displayed in a grid layout. When you hover over each of them, they display additional user information and a link to view a full profile."]}),"\n",(0,t.jsx)(n.p,{children:"We're going to write a test that will hover over the first avatar and make sure that this additional information appears."}),"\n",(0,t.jsxs)(n.p,{children:["First, we'll want to include our requisite libraries (e.g., ",(0,t.jsx)(n.code,{children:"selenium-webdriver"})," to control the browser, and ",(0,t.jsx)(n.code,{children:"rspec/expectations"})," and ",(0,t.jsx)(n.code,{children:"RSpec::Matchers"})," for our assertion) and wire up some ",(0,t.jsx)(n.code,{children:"setup"}),", ",(0,t.jsx)(n.code,{children:"teardown"}),", and ",(0,t.jsx)(n.code,{children:"run"})," methods."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"# filename: hover.rb\n\nrequire 'selenium-webdriver'\nrequire 'rspec/expectations'\ninclude RSpec::Matchers\n\ndef setup\n  @driver = Selenium::WebDriver.for :firefox\nend\n\ndef teardown\n  @driver.quit\nend\n\ndef run\n  setup\n  yield\n  teardown\nend\n"})}),"\n",(0,t.jsx)(n.p,{children:"Now let's write our test."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",children:"run do\n  @driver.get 'http://the-internet.herokuapp.com/hovers'\n  an_avatar = @driver.find_element(class: 'figure')\n  @driver.action.move_to(an_avatar).perform\n  expect(@driver.find_element(class: 'figcaption').displayed?).to eql true\nend\n"})}),"\n",(0,t.jsxs)(n.p,{children:["After loading the page we find the first avatar and store it in a variable (",(0,t.jsx)(n.code,{children:"an_avatar"}),"). We then use Selenium's ",(0,t.jsx)(n.code,{children:"action.move_to"})," method and feed the avatar variable to it (which triggers the hover)."]}),"\n",(0,t.jsxs)(n.p,{children:["We then check to see if the additional user information is displayed with ",(0,t.jsx)(n.code,{children:".displayed?"})," and wrap that in an assertion."]}),"\n",(0,t.jsx)(n.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,t.jsxs)(n.p,{children:["If we save this file and run it (e.g., ",(0,t.jsx)(n.code,{children:"ruby hover.rb"})," from the command-line) here is what will happen:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Open the browser"}),"\n",(0,t.jsx)(n.li,{children:"Visit the page"}),"\n",(0,t.jsx)(n.li,{children:"Hover over the first avatar"}),"\n",(0,t.jsx)(n.li,{children:"Assert that the caption appeared on the page"}),"\n",(0,t.jsx)(n.li,{children:"Close the browser"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsx)(n.p,{children:"Hopefully this will help you handle more complex user interactions like hovers."}),"\n",(0,t.jsx)(n.p,{children:"Happy Testing!"})]})}function c(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(96540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);