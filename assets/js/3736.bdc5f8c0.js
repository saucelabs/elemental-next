"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[3736],{3736:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=n(74848),t=n(28453);const i={},o=void 0,a={id:"one-test-multiple-browsers/_ruby",title:"_ruby",description:"Example",source:"@site/tips/41-one-test-multiple-browsers/_ruby.mdx",sourceDirName:"41-one-test-multiple-browsers",slug:"/one-test-multiple-browsers/_ruby",permalink:"/tips/one-test-multiple-browsers/_ruby",draft:!1,unlisted:!1,editUrl:"https://github.com/saucelabs/elemental-next/blob/main/frontend/tips/41-one-test-multiple-browsers/_ruby.mdx",tags:[],version:"current",lastUpdatedBy:"renovate[bot]",lastUpdatedAt:1731431561e3,frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Disabled Element",permalink:"/tips/40-disabled-element"},next:{title:"How to Run a Test on Multiple Browsers",permalink:"/tips/41-one-test-multiple-browsers"}},l={},d=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function c(e){const r={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(r.p,{children:["To start, we include our dependent libraries (",(0,s.jsx)(r.code,{children:"'selenium-webdriver'"})," to drive the browser, and ",(0,s.jsx)(r.code,{children:"'rspec-expectations'"}),"\nto perform our assertion) and then wire up ",(0,s.jsx)(r.code,{children:"setup"})," and ",(0,s.jsx)(r.code,{children:"teardown"})," methods."]}),"\n",(0,s.jsxs)(r.p,{children:["In ",(0,s.jsx)(r.code,{children:"setup"})," we are accepting two parameters -- ",(0,s.jsx)(r.code,{children:"browser_name"})," and ",(0,s.jsx)(r.code,{children:"browser_version"}),". We put these to use when\nspecifying the browser and operating system capabilities for Sauce Labs, which gets stored in the ",(0,s.jsx)(r.code,{children:"caps"})," variable.\nThis variable then gets passed in as part of the ",(0,s.jsx)(r.code,{children:"@driver"})," incantation."]}),"\n",(0,s.jsxs)(r.p,{children:["And in ",(0,s.jsx)(r.code,{children:"teardown"})," we destroy the browser session."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"# filename: example.rb\n\nrequire 'selenium-webdriver'\nrequire 'rspec/expectations'\n\ndef setup(browser_name, browser_version)\n  caps = Selenium::WebDriver::Remote::Capabilities.send(browser_name.to_sym)\n  caps.platform = 'Windows XP'\n  caps.version = browser_version.to_s\n\n  @driver = Selenium::WebDriver.for(\n    :remote,\n    url: \"https://#{ENV['SAUCE_USERNAME']}:#{ENV['SAUCE_API_KEY']}@ondemand.saucelabs.com/wd/hub\",\n    desired_capabilities: caps)\nend\n\ndef teardown\n  @driver.quit\nend\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Note the ",(0,s.jsx)(r.code,{children:"url:"})," in the ",(0,s.jsx)(r.code,{children:"@driver"})," section above. It is concatenated from environment variables that are set at run\ntime; like so."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-sh",children:"SAUCE_USERNAME='your sauce username' SAUCE_API_KEY='your sauce api key' ruby example.rb\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Next we specify the browsers and versions we care about in a collection (e.g., a Hash), create a ",(0,s.jsx)(r.code,{children:"run"})," method, and\nwire it up to loop over the collection -- running ",(0,s.jsx)(r.code,{children:"setup"}),", test actions, and ",(0,s.jsx)(r.code,{children:"teardown"})," for each browser in the\ncollection."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"BROWSERS = { firefox: '27',\n             chrome: '32',\n             internet_explorer: '8' }\n\ndef run\n  BROWSERS.each_pair do |browser, browser_version|\n    setup(browser, browser_version)\n    yield\n    teardown\n  end\nend\n"})}),"\n",(0,s.jsx)(r.p,{children:"Once we have that, we wire up our test."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-ruby",children:"run do\n  @driver.get 'https://the-internet.herokuapp.com'\n  expect(@driver.title).to eql('The Internet')\nend\n"})}),"\n",(0,s.jsx)(r.p,{children:"And when we run it, we should see three jobs appear in Sauce Labs."}),"\n",(0,s.jsx)(r.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Load Firefox, load the page, assert the title is correct"}),"\n",(0,s.jsx)(r.li,{children:"Load Chrome, load the page, assert the title is correct"}),"\n",(0,s.jsx)(r.li,{children:"Load IE, load the page, assert the title is correct"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsx)(r.p,{children:"Hopefully this tip has helped make multi-browser testing more approachable to you."}),"\n",(0,s.jsx)(r.p,{children:"Happy Testing!"})]})}function p(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);