"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[6877],{96877:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>a,frontMatter:()=>l,toc:()=>d});var r=t(74848),i=t(28453);const l={},s=void 0,d=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2},{value:"About The Author",id:"about-the-author",level:2}];function h(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["For our initial setup let's pull in the ",(0,r.jsx)(n.code,{children:"selenium-webdriver"})," gem and wire up some simple ",(0,r.jsx)(n.code,{children:"setup"}),", ",(0,r.jsx)(n.code,{children:"teardown"}),", and ",(0,r.jsx)(n.code,{children:"run"})," methods."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# filename: highlight.rb\n\nrequire 'selenium-webdriver'\n\ndef setup\n  @driver = Selenium::WebDriver.for :firefox\nend\n\ndef teardown\n  @driver.quit\nend\n\ndef run\n  setup\n  yield\n  teardown\nend\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Now let's create a ",(0,r.jsx)(n.code,{children:"highlight"})," helper method that will accept a Selenium WebDriver ",(0,r.jsx)(n.code,{children:"element"})," and a time to wait (e.g., ",(0,r.jsx)(n.code,{children:"duration"}),") as arguments."]}),"\n",(0,r.jsx)(n.p,{children:"By setting a duration, we can control how long to highlight an element on the page before reverting the styling back. And we can make this an optional argument by setting a default (e.g., 3 seconds)."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:'def highlight(element, duration = 3)\n\n  # store original style so it can be reset later\n  original_style = element.attribute("style")\n\n  # style element with yellow border\n  @driver.execute_script(\n    "arguments[0].setAttribute(arguments[1], arguments[2])",\n    element,\n    "style",\n    "border: 2px solid red; border-style: dashed;")\n\n  # keep element highlighted for a spell and then revert\n  if duration > 0\n    sleep duration\n    @driver.execute_script(\n      "arguments[0].setAttribute(arguments[1], arguments[2])",\n      element,\n      "style",\n      original_style)\n  end\n\nend\n'})}),"\n",(0,r.jsx)(n.p,{children:"There are three things going on here."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"We store the style of the element so we can revert it back when we're done"}),"\n",(0,r.jsx)(n.li,{children:"We change the style of the element so it visually stands out (e.g., a red dashed border)"}),"\n",(0,r.jsx)(n.li,{children:"We revert the style of the element back after 3 seconds"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["We're accomplishing the style change through JavaScript's ",(0,r.jsx)(n.code,{children:"setAttribute"})," function. And we're executing it with Selenium's ",(0,r.jsx)(n.code,{children:"execute_script"})," command."]}),"\n",(0,r.jsxs)(n.p,{children:["Now to use this in our test is simple, we just prepend a ",(0,r.jsx)(n.code,{children:"find_element"})," action with the ",(0,r.jsx)(n.code,{children:"highlight"})," command."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"run do\n  @driver.get 'http://the-internet.herokuapp.com/large'\n  highlight @driver.find_element(id: 'sibling-2.3')\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,r.jsxs)(n.p,{children:["If you were to save this file and run it (e.g., ",(0,r.jsx)(n.code,{children:"ruby highlight.rb"})," from the command-line), here is what you would see."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Load the page"}),"\n",(0,r.jsx)(n.li,{children:"Find the element"}),"\n",(0,r.jsx)(n.li,{children:"Change the styling of the element so it has a red dashed-line border"}),"\n",(0,r.jsx)(n.li,{children:"Wait 3 seconds"}),"\n",(0,r.jsx)(n.li,{children:"Revert the styling to remove the border"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"If you wanted to take this a step further, you could leverage this approach along with an interactive debugger."}),"\n",(0,r.jsx)(n.p,{children:"Alternatively, you could verify your locators by using a browser plugin like FireFinder."}),"\n",(0,r.jsx)(n.p,{children:"Happy Testing!"}),"\n",(0,r.jsx)(n.h2,{id:"about-the-author",children:"About The Author"}),"\n",(0,r.jsxs)(n.p,{children:["You can follow Brian on Twitter at ",(0,r.jsx)(n.a,{href:"https://twitter.com/bbbco",children:"@bbbco"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Brian D. Goad profile picture",src:t(25764).A+"#author-img",title:"a title",width:"400",height:"400"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},25764:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/brian-goad-06cd835a357f61c84c3c62c72fb7d03b.jpeg"}}]);