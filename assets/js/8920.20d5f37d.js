"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[8920],{18920:(e,n,i)=>{i.r(n),i.d(n,{contentTitle:()=>s,default:()=>h,frontMatter:()=>a,toc:()=>l});var r=i(74848),t=i(28453);const a={},s=void 0,l=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["Our example application is available ",(0,r.jsx)(n.a,{href:"http://the-internet.herokuapp.com/hovers",children:"here"})," on ",(0,r.jsx)(n.a,{href:"http://github.com/saucelabs/the-internet",children:"the-internet"}),". It has a few avatars displayed in a grid layout. When you hover over each of them, they display additional user information and a link to view a full profile."]}),"\n",(0,r.jsx)(n.p,{children:"We're going to write a test that will hover over the first avatar and make sure that this additional information appears."}),"\n",(0,r.jsxs)(n.p,{children:["First we'll include our requisite libraries, declare the test class, and wire up some simple ",(0,r.jsx)(n.code,{children:"setUp"})," and ",(0,r.jsx)(n.code,{children:"tearDown"})," methods."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# filename: hovers.py\nimport unittest\nfrom selenium import webdriver\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.common.by import By\n\n\nclass Hovers(unittest.TestCase):\n\n    def setUp(self):\n        self.driver = webdriver.Firefox()\n\n    def tearDown(self):\n        self.driver.quit()\n\n# ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now let's write our test."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# filename: hovers.py\n# ...\n    def test_example_1(self):\n        driver = self.driver\n        driver.get('http://the-internet.herokuapp.com/hovers')\n        avatar = driver.find_element(By.CLASS_NAME, 'figure')\n        ActionChains(driver).move_to_element(avatar).perform()\n        avatar_caption = driver.find_element(By.CLASS_NAME, 'figcaption')\n        assert avatar_caption.is_displayed()\n\nif __name__ == \"__main__\":\n    unittest.main()\n"})}),"\n",(0,r.jsxs)(n.p,{children:["After loading the page we find the first avatar and store it in a variable (",(0,r.jsx)(n.code,{children:"avatar"}),"). We then use the ",(0,r.jsx)(n.code,{children:".move_to_element"})," method and feed it the avatar variable (which triggers the hover)."]}),"\n",(0,r.jsxs)(n.p,{children:["We then check to see if the additional user information is displayed with ",(0,r.jsx)(n.code,{children:".is_displayed"})," in our assertion."]}),"\n",(0,r.jsx)(n.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,r.jsxs)(n.p,{children:["When we save this file and run it (e.g., ",(0,r.jsx)(n.code,{children:"python hover.py"})," from the command-line) here is what will happen:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Open the browser"}),"\n",(0,r.jsx)(n.li,{children:"Visit the page"}),"\n",(0,r.jsx)(n.li,{children:"Hover over the first avatar"}),"\n",(0,r.jsx)(n.li,{children:"Assert that the caption appeared on the page"}),"\n",(0,r.jsx)(n.li,{children:"Close the browser"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"Hopefully this will help you handle more complex user interactions like hovers."}),"\n",(0,r.jsx)(n.p,{children:"Happy Testing!"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}}}]);