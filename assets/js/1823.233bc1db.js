"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[1823],{11823:(e,n,i)=>{i.r(n),i.d(n,{contentTitle:()=>s,default:()=>o,frontMatter:()=>l,toc:()=>a});var r=i(74848),t=i(28453);const l={},s=void 0,a=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"Run the following command on the terminal:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"$  /usr/bin/safaridriver --enable"})}),"\n",(0,r.jsx)(n.p,{children:"After that, make sure it's enabled. To do that:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["open ",(0,r.jsx)(n.code,{children:"Safari"})]}),"\n",(0,r.jsxs)(n.li,{children:["go to ",(0,r.jsx)(n.code,{children:"Develop"})]}),"\n",(0,r.jsxs)(n.li,{children:["click on ",(0,r.jsx)(n.code,{children:"Allow Remote Automations"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Now if we open up an interactive Ruby terminal (e.g., ",(0,r.jsx)(n.code,{children:"irb"}),") and launch a Selenium instance, here's what we'd see."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"> irb\nirb(main):001:0> require 'selenium-webdriver'\nirb(main):002:0> driver = Selenium::WebDriver.for :safari\n"})}),"\n",(0,r.jsx)(n.p,{children:"A successful communication between Safari and the Selenium Driver extension has occurred."}),"\n",(0,r.jsx)(n.p,{children:"Now let's wire up a simple test so we can see that everything works as expect."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ruby",children:"# filename: safari.rb\n\nrequire 'selenium-webdriver'\nrequire 'rspec/expectations'\ninclude RSpec::Matchers\n\ndef setup\n  @driver = Selenium::WebDriver.for :safari\nend\n\ndef teardown\n  @driver.quit\nend\n\ndef run\n  setup\n  yield\n  teardown\nend\n\nrun do\n  @driver.get 'http://the-internet.herokuapp.com'\n  expect(@driver.title).to eql 'The Internet'\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,r.jsxs)(n.p,{children:["When you save the file and run it (e.g., ",(0,r.jsx)(n.code,{children:"ruby safari.rb"})," from the command-line), here is what will happen:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Safari opens"}),"\n",(0,r.jsxs)(n.li,{children:["The home page of ",(0,r.jsx)(n.a,{href:"http://github.com/saucelabs/the-internet",children:"the-internet"})," loads"]}),"\n",(0,r.jsx)(n.li,{children:"The title of the page is checked to make sure it's what we expect"}),"\n",(0,r.jsx)(n.li,{children:"Safari closes"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsx)(n.p,{children:"Keep in mind that Safari can load without you realizing it (since it doesn't obtain focus when launching with Selenium). When that happens you'll need to switch to Safari in order to see what the test is doing."}),"\n",(0,r.jsx)(n.p,{children:"And if you're running Safari on a remote node (or set of nodes), you'll need to install and enable the SafariDriver browser extension on each of them."}),"\n",(0,r.jsx)(n.p,{children:"Happy Testing!"})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);