"use strict";(self.webpackChunkelemental_selenium=self.webpackChunkelemental_selenium||[]).push([[2958],{2958:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>h,frontMatter:()=>s,toc:()=>a});var r=t(74848),i=t(28453);const s={},l=void 0,a=[{value:"Example",id:"example",level:2},{value:"Expected Behavior",id:"expected-behavior",level:2},{value:"Summary",id:"summary",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["Let's start by pulling in our requisite libraries, declare the test class, and wire up some simple ",(0,r.jsx)(n.code,{children:"setUp"})," and ",(0,r.jsx)(n.code,{children:"tearDown"})," methods."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# filename: right_click.py\nimport unittest\nfrom selenium import webdriver\nfrom selenium.webdriver.common.action_chains import ActionChains\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\n\n\nclass RightClick(unittest.TestCase):\n\n    def setUp(self):\n        self.driver = webdriver.Firefox()\n\n    def tearDown(self):\n        self.driver.quit()\n# ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now we're ready to write our test."}),"\n",(0,r.jsxs)(n.p,{children:["We'll use an example from ",(0,r.jsx)(n.a,{href:"https://github.com/saucelabs/the-internet",children:"the-internet"})," that will render a custom context menu when we right-click on a specific area of the page (",(0,r.jsx)(n.a,{href:"http://the-internet.herokuapp.com/context_menu",children:"link"}),"). Clicking the context menu will trigger a JavaScript alert which will say ",(0,r.jsx)(n.code,{children:"You selected a context menu"}),". We'll grab this text and use it to assert that the menu was actually triggered."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# filename: right_click.py\n# ...\n    def test_example_1(self):\n        driver = self.driver\n        driver.get('http://the-internet.herokuapp.com/context_menu')\n        menu_area = driver.find_element(By.ID,'hot-spot')\n        ActionChains(driver).context_click(\n            menu_area).send_keys(\n            Keys.ARROW_DOWN).send_keys(\n            Keys.ARROW_DOWN).send_keys(\n            Keys.ARROW_DOWN).send_keys(\n            Keys.ENTER).perform()\n        alert = driver.switch_to.alert\n        assert alert.text == 'You selected a context menu'\n\nif __name__ == \"__main__\":\n    unittest.main()\n"})}),"\n",(0,r.jsx)(n.h2,{id:"expected-behavior",children:"Expected Behavior"}),"\n",(0,r.jsxs)(n.p,{children:["When we save this file and run it (e.g., ",(0,r.jsx)(n.code,{children:"python right_click.py"}),") from the command-line) here is what will happen:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Open the browser and visit the page"}),"\n",(0,r.jsx)(n.li,{children:"Find and right-click the area which will render a custom context menu"}),"\n",(0,r.jsx)(n.li,{children:"Select the context menu option with keyboard keys"}),"\n",(0,r.jsx)(n.li,{children:"JavaScript alert appears"}),"\n",(0,r.jsx)(n.li,{children:"Grab the text of the JavaScript alert"}),"\n",(0,r.jsx)(n.li,{children:"Assert that the text from the alert is what we expect"}),"\n",(0,r.jsx)(n.li,{children:"Close the browser"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(n.p,{children:["To learn more about context menus, you can read ",(0,r.jsx)(n.a,{href:"http://blog.teamtreehouse.com/building-html5-context-menus",children:"this write-up from the Tree House blog"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Happy Testing!"})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);